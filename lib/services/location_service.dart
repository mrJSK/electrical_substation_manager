// lib/services/location_service.dart
import 'dart:convert';
import 'package:flutter/services.dart';
import 'package:freezed_annotation/freezed_annotation.dart';

// These part files will be generated by build_runner
part 'location_service.freezed.dart';
part 'location_service.g.dart';

class LocationService {
  static Map<String, dynamic>? _locationData;

  static Future<void> initializeLocationData() async {
    if (_locationData == null) {
      final String jsonString =
          await rootBundle.loadString('assets/states_cities.json');
      _locationData = json.decode(jsonString);
    }
  }

  static List<StateModel> getAllStates() {
    if (_locationData == null) return [];
    return (_locationData!['states'] as List)
        .map((state) => StateModel.fromJson(state))
        .toList();
  }

  static List<CityModel> getCitiesForState(int stateId) {
    if (_locationData == null) return [];
    final state = (_locationData!['states'] as List)
        .cast<Map<String, dynamic>?>()
        .firstWhere((s) => s?['id'] == stateId, orElse: () => null);
    if (state == null) return [];
    return (state['cities'] as List)
        .map((city) => CityModel.fromJson(city as Map<String, dynamic>))
        .toList();
  }

  static StateModel? getStateById(int id) {
    final states = getAllStates();
    try {
      return states.firstWhere((s) => s.id == id);
    } catch (e) {
      return null;
    }
  }

  static CityModel? getCityById(int id) {
    final states = getAllStates();
    for (var state in states) {
      try {
        return state.cities.firstWhere((c) => c.id == id);
      } catch (e) {
        continue;
      }
    }
    return null;
  }
}

@freezed
class StateModel with _$StateModel {
  const factory StateModel({
    required int id,
    required String name,
    required List<CityModel> cities,
  }) = _StateModel;

  factory StateModel.fromJson(Map<String, dynamic> json) =>
      _$StateModelFromJson(json);
}

@freezed
class CityModel with _$CityModel {
  const factory CityModel({
    required int id,
    required String name,
  }) = _CityModel;

  factory CityModel.fromJson(Map<String, dynamic> json) =>
      _$CityModelFromJson(json);
}
